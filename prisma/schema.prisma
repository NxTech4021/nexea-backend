generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String    @id @default(uuid())
  email                String    @unique
  password             String?
  name                 String?   @db.VarChar(100)
  position             String?   @db.VarChar(50)
  verified             Boolean?
  confirmationToken    String?   @unique
  createdAt            DateTime  @default(now())
  updatedAt            DateTime? @updatedAt
  userLevel            Int?
  address              String?   @db.VarChar(255)
  resetPasswordToken   String?   @unique
  resetPasswordExpires DateTime?
  department           String?   @db.VarChar(100)
  photoURL             String?   @db.VarChar(255)
  Event                Event[]
  created_at           DateTime  @default(now())
  update_at            DateTime  @updatedAt
}

model Attendee {
  id             String   @id @default(uuid())
  firstName      String?
  lastName       String?
  name           String?
  orderNumber    String?
  ticketTotal    String?
  discountCode   String?
  ticketCode     String?
  ticketID       String?
  ticketType     String?
  buyerFirstName String?
  buyerLastName  String?
  buyerEmail     String?
  phoneNumber    String?
  companyName    String?
  created_at     DateTime @default(now())
  update_at      DateTime @updatedAt
  eventId        String?
  event          Event?    @relation(fields: [eventId], references: [id])
  attendance     String?
}

model Event {
  id             String      @id @default(uuid())
  name           String
  personInCharge User        @relation(fields: [pic_id], references: [id])
  pic_id         String      
  description    String?     @db.VarChar(255)
  tickera_api    String?     @db.VarChar(255)
  date           DateTime
  status         EventStatus
  created_at     DateTime    @default(now())
  update_at      DateTime    @updatedAt
  attendees      Attendee[]
}

enum EventStatus {
  live
  scheduled
  completed
  postponed
  done
}
